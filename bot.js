// –û–ë–û–ó–ù–ê–ß–ï–ù–ò–Ø –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ï–í!!!
// !—Ç–µ–∫—Å—Ç! - –æ—á–µ–Ω—å –≤–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è —Ç–µ–∫—Å—Ç–∞
// ?–∫–æ–¥? - –≤–∞–∂–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –∫–æ–¥–∞
// TODO –ø—Ä–æ–≤–µ—Ä–∫–∞ TODO - —Ä–∞–∑–ª–∏—á–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–æ–¥–∞
// *–∫–æ–¥ => –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ –∫ –Ω–µ–º—É* - –ø–æ—è—Å–Ω–µ–Ω–∏—è –∑–∞ –∫–æ–¥
// QWERTY - –¥—Ä—É–≥–æ–µ

//–∏–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ dotenv –∏ grammy

require('dotenv').config()
const { Bot, GrammyError, HttpError, Keyboard, Context } = require('grammy')

const https = require('https')

const fetch = require('node-fetch')

const dayjs = require('dayjs')

const bot = new Bot(process.env.BOT_API_KEY) //?–ø–æ–¥–∫–ª—é—á–∞–µ–º API –±–æ—Ç–∞

const vkAccessToken = process.env.VK_ACCESS_TOKEN

const tgId = process.env.TG_ID

bot.api.setMyCommands([
	{
		command: 'start',
		description: '–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã',
	},
	{
		command: 'help',
		description: '–ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞',
	},
	// {
	// 	command: 'clear',
	// 	description: '–û—á–∏—Å—Ç–∫–∞ —á–∞—Ç–∞',
	// },
	{
		command: 'social',
		description: '–°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏:',
	},
	{
		command: 'many',
		description: '–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç',
	},
	// {
	// 	command: 'file',
	// 	description: '–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤–∞—à–∏—Ö —Ñ–∞–π–ª–æ–≤:',
	// },
	// {
	// 	command: 'vk_f',
	// 	description: '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –Ω–∞ —Ñ–µ–π–∫–æ–≤–æ—Å—Ç—å',
	// },
])
// –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ

bot.command('start', async ctx => {
	await ctx.reply(
		'–ü—Ä–∏–≤–µ—Ç! –Ø telegram-bot, –º–æ–∂–µ—à—å –≤–æ—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏ –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å–æ –º–Ω–æ–π, —É–¥–∞—á–∏!',
		{
			parse_mode: 'HTML',
		}
	)
})

bot.command('help', async ctx => {
	await ctx.reply(
		'–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n/start - –°—Ç–∞—Ä—Ç –±–æ—Ç–∞\n/help - –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞\n/many - –ö—É—Ä—Å –≤–∞–ª—é—Ç\n/social - –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Å–µ—Ç–∏\n'
	)
})

// –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –≤ —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
bot.command('many', async ctx => {
	try {
		// –ü–æ–ª—É—á–∞–µ–º –∫—É—Ä—Å—ã –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç —Å CoinGecko
		const cryptoResponse = await fetch(
			'https://api.coingecko.com/api/v3/simple/price?ids=bitcoin,ethereum&vs_currencies=usd'
		)
		const cryptoRates = await cryptoResponse.json()

		// –ü–æ–ª—É—á–∞–µ–º –∫—É—Ä—Å—ã —Ñ–∏–∞—Ç–Ω—ã—Ö –≤–∞–ª—é—Ç —Å Open Exchange Rates
		const fiatResponse = await fetch(
			'https://openexchangerates.org/api/latest.json?app_id=31edd0acea4d45019d62ba0fc63a22c5'
		)
		const fiatRates = await fiatResponse.json()
		const usdToRubRate = fiatRates.rates.RUB // –ö—É—Ä—Å –¥–æ–ª–ª–∞—Ä–∞ –∫ —Ä—É–±–ª—é
		// ‚Çø ·öß
		// –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫—É—Ä—Å–∞–º–∏ –≤–∞–ª—é—Ç
		let message = '<b>–ö—É—Ä—Å—ã –≤–∞–ª—é—Ç:</b>\n'
		message += `üí∞ <b>Bitcoin (BTC):</b> ${cryptoRates.bitcoin.usd} USD (${(
			cryptoRates.bitcoin.usd * usdToRubRate
		).toFixed(2)} RUB)\n`
		message += `üíé <b>Ethereum (ETH):</b> ${cryptoRates.ethereum.usd} USD (${(
			cryptoRates.ethereum.usd * usdToRubRate
		).toFixed(2)} RUB)\n`

		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –≤–∫–ª—é—á–µ–Ω–∏–µ–º HTML —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
		await ctx.reply(message, { parse_mode: 'HTML' })

		// –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é - –æ—Ç–ª–∞–¥–∫–∞
		// await ctx.reply(message)
	} catch (error) {
		console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç:', error)
		await ctx.reply(
			'–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫—É—Ä—Å–æ–≤ –≤–∞–ª—é—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.'
		)
	}
})
// bot.hears('creator_ximelay', async ctx => {
// 	if (ctx.from.id === tgId) {
// 		await ctx.reply(
// 			'–ü—Ä–∏–≤–µ—Ç, Ximelay. –°–∫–æ—Ä–æ —ç—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –±—É–¥–µ—Ç –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è —Ç–µ–±—è'
// 		)
// 	} else {
// 		await ctx.reply('–≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è –∞–¥–º–∏–Ω–∞(')
// 	}
// })

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —á–∞—Ç–∞
// bot.command('clear', async ctx => {
// 	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–º–µ–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∞–≤–∞ –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∏–ª–∏ —Å–æ–∑–¥–∞—Ç–µ–ª—å —á–∞—Ç–∞)
// 	if (ctx.from.id == tgId) {
// 		try {
// 			// –ü–æ–ª—É—á–∞–µ–º –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞
// 			const chatId = ctx.chat.id
// 			// –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤ —á–∞—Ç–µ
// 			const messages = await getChatHistory(chatId)
// 			// –ü—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ –∫–∞–∂–¥–æ–º—É —Å–æ–æ–±—â–µ–Ω–∏—é –∏ —É–¥–∞–ª—è–µ–º –µ–≥–æ
// 			for (const message of messages) {
// 				await deleteMessage(chatId, message.message_id)
// 			}
// 			await ctx.reply('Chat cleared successfully')
// 		} catch (error) {
// 			console.error('Error while clearing chat:', error)
// 			await ctx.reply('Error while clearing chat')
// 		}
// 	} else {
// 		await ctx.reply('You do not have permission to clear the chat.')
// 	}
// })

// // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞
// async function getChatHistory(chatId) {
// 	return new Promise((resolve, reject) => {
// 		const options = {
// 			hostname: 'api.telegram.org',
// 			path: `/bot${bot}/getChatHistory?chat_id=${chatId}&limit=1000`,
// 			method: 'GET',
// 		}

// 		const req = https.request(options, res => {
// 			let data = ''
// 			res.on('data', chunk => {
// 				data += chunk
// 			})
// 			res.on('end', () => {
// 				const result = JSON.parse(data)
// 				if (result.ok) {
// 					resolve(result.result.messages)
// 				} else {
// 					reject(result)
// 				}
// 			})
// 		})

// 		req.on('error', error => {
// 			reject(error)
// 		})

// 		req.end()
// 	})
// }

// // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ
// async function deleteMessage(chatId, messageId) {
// 	return new Promise((resolve, reject) => {
// 		const options = {
// 			hostname: 'api.telegram.org',
// 			path: `/bot${bot.token}/deleteMessage`,
// 			method: 'POST',
// 			headers: {
// 				'Content-Type': 'application/json',
// 			},
// 		}

// 		const req = https.request(options, res => {
// 			res.on('data', () => {
// 				// –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ
// 				resolve()
// 			})
// 		})

// 		req.on('error', error => {
// 			reject(error)
// 		})

// 		const postData = JSON.stringify({
// 			chat_id: chatId,
// 			message_id: messageId,
// 		})

// 		req.write(postData)
// 		req.end()
// 	})
// }

// // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–Ω–µ–π –º–µ–∂–¥—É –¥–≤—É–º—è –¥–∞—Ç–∞–º–∏
// function getDaysSince(date) {
// 	const today = dayjs() // –¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞
// 	const registrationDate = dayjs(date) // –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
// 	return today.diff(registrationDate, 'day') // –†–∞–∑–Ω–∏—Ü–∞ –≤ –¥–Ω—è—Ö
// }

// bot.command('vk_f', async ctx => {
// 	ctx.reply(
// 		'–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –í–ö–æ–Ω—Ç–∞–∫—Ç–µ, –∏ —è –ø—Ä–æ–≤–µ—Ä—é –µ—ë –Ω–∞ "—Ñ–µ–π–∫–æ–≤–æ—Å—Ç—å".'
// 	)
// })

// bot.on('::url', async ctx => {
// 	const text = ctx.message.text
// 	const vkUrlRegex = /^https:\/\/vk\.com\/([^\s]+)/i // –†–µ–≥—É–ª—è—Ä–Ω–æ–µ –≤—ã—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Å—ã–ª–æ–∫ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
// 	if (vkUrlRegex.test(text)) {
// 		// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è —Å—Å—ã–ª–∫–æ–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
// 		const userId = text.match(vkUrlRegex)[1] // –ò–∑–≤–ª–µ–∫–∞–µ–º id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å—Å—ã–ª–∫–∏
// 		const vkResponse = await fetch(
// 			`https://api.vk.com/method/users.get?user_ids=${userId}&fields=bdate,counters&access_token=${vkAccessToken}&v=5.131`
// 		)
// 		const userData = await vkResponse.json()
// 		if (userData.response && userData.response[0]) {
// 			const user = userData.response[0]
// 			if (user.is_closed === 1) {
// 				ctx.reply('–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∑–∞–∫—Ä—ã—Ç–∞, –≤–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ —Ñ–µ–π–∫.')
// 			} else {
// 				const registrationDate = user.bdate // –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ
// 				const daysSinceRegistration = registrationDate
// 					? getDaysSince(registrationDate)
// 					: null // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π —Å –º–æ–º–µ–Ω—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
// 				let message = '' // –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –ø—Ä–æ–≤–µ—Ä–∫–∏
// 				if (daysSinceRegistration !== null) {
// 					if (daysSinceRegistration < 100) {
// 						message =
// 							'–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –º–µ–Ω–µ–µ 100 –¥–Ω–µ–π, —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ, —ç—Ç–æ —Ñ–µ–π–∫–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞.'
// 					} else if (daysSinceRegistration < 730) {
// 						message =
// 							'–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –º–µ–Ω–µ–µ 2 –ª–µ—Ç, –≤–æ–∑–º–æ–∂–Ω–æ, —ç—Ç–æ —Ñ–µ–π–∫–æ–≤–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞.'
// 					} else {
// 						message =
// 							'–°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –±–æ–ª–µ–µ 2 –ª–µ—Ç, –≤–µ—Ä–æ—è—Ç–Ω–æ, —ç—Ç–æ –Ω–∞—Å—Ç–æ—è—â–∏–π –∞–∫–∫–∞—É–Ω—Ç.'
// 					}
// 				} else {
// 					message =
// 						'–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–∞, –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ñ–µ–π–∫–æ–≤–æ—Å—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—ã.'
// 				}
// 				ctx.reply(message)
// 			}
// 		} else {
// 			ctx.reply('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ.')
// 		}
// 	} else {
// 		ctx.reply('–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –í–ö–æ–Ω—Ç–∞–∫—Ç–µ.')
// 	}
// })
// !–î–æ–¥–µ–ª–∞—Ç—å
bot.command('social', async ctx => {
	const moodKeyboard = new Keyboard()
		.text('/Telegram')
		.row()
		// .text('VK')
		// .row()
		// .text('GitHub')
		.resized()
		.oneTime() //* —Å–æ–∑–¥–∞—Å—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É, –≥–¥–µ —Å –∫–∞–∂–¥–æ–π –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏ –±—É–¥–µ—Ç –≤—ã–≤–µ–¥–µ–Ω–æ –Ω–æ–≤–æ–µ —Å–ª–æ–≤–æ —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏ –ø–æ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É
	await ctx.reply('–í–≤–µ–¥–∏–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é –∫–æ–º–∞–Ω–¥—É:', {
		reply_markup: moodKeyboard,
	})
})

bot.hears('/Telegram', async ctx => {
	await ctx.reply(`–í–∞—à id –≤ Telegram: ${ctx.from.id}`)
})

// bot.hears('VK', async ctx => {
// 	await ctx.reply(`VK: https://m.vk.com`)
// })

// bot.hears('GitHub', async ctx => {
// 	await ctx.reply('GitHub: https://github.com')
// })

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—É—Å—Ç–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Å—ã–ª–æ–∫ –Ω–∞ —Ñ–∞–π–ª—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
// const userFiles = {}

// –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞
// bot.command('file', ctx => {
// 	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Å—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
// 	ctx.session = { expectingFiles: true }
// 	return ctx.reply('–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Ñ–∞–π–ª –∏ —è –µ–≥–æ —Å–æ—Ö—Ä–∞–Ω—é.')
// })

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
// bot.on('message', async ctx => {
// 	if (ctx.session && ctx.session.expectingFiles && ctx.message.document) {
// 		// –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
// 		const file = await ctx.telegram.getFile(ctx.message.document.file_id)
// 		// –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
// 		const fileLink = `https://api.telegram.org/file/bot${bot}/${file.file_path}`
// 		// –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
// 		const userId = ctx.from.id
// 		// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É–∂–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
// 		if (!userFiles[userId]) {
// 			userFiles[userId] = [] // –ï—Å–ª–∏ –Ω–µ—Ç, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤
// 		}
// 		// –î–æ–±–∞–≤–ª—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–∞–π–ª –≤ –º–∞—Å—Å–∏–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
// 		userFiles[userId].push(fileLink)
// 		// –£–¥–∞–ª—è–µ–º —Ñ–ª–∞–≥ –æ–∂–∏–¥–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤
// 		delete ctx.session.expectingFiles
// 		ctx.reply('–§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω! –ú–æ–∂–µ—à—å –µ–≥–æ —Å–∫–∞—á–∞—Ç—å –ø–æ —ç—Ç–æ–π —Å—Å—ã–ª–∫–µ: ' + fileLink)
// 	} else if (ctx.session && ctx.session.expectingFiles) {
// 		ctx.reply('–ò–∑–≤–∏–Ω–∏—Ç–µ, –æ–∂–∏–¥–∞–ª—Å—è —Ç–æ–ª—å–∫–æ —Ñ–∞–π–ª. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª.')
// 	}
// })

// // –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ñ–∞–π–ª–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
// bot.command('my_files', ctx => {
// 	// –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
// 	const userId = ctx.from.id
// 	// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
// 	if (userFiles[userId] && userFiles[userId].length > 0) {
// 		// –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Å—ã–ª–∫–∞–º–∏ –Ω–∞ —Ñ–∞–π–ª—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
// 		const message = userFiles[userId]
// 			.map((fileLink, index) => `${index + 1}. ${fileLink}`)
// 			.join('\n')
// 		ctx.reply(`–í–∞—à–∏ —Ñ–∞–π–ª—ã:\n${message}`)
// 	} else {
// 		ctx.reply('–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤.')
// 	}
// })

bot.catch(err => {
	// TODO –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –æ—à–∏–±–∫–∏
	const ctx = err.ctx
	console.log(`–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è ${ctx.update.update_id}:`)
	const e = err.error

	if (e instanceof GrammyError) {
		console.error('–û—à–∏–±–∫–∞ –≤ –∑–∞–ø—Ä–æ—Å–µ:', e.description)
	} else if (e instanceof HttpError) {
		console.error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≤—è–∑–∞—Ç—å—Å—è —Å Telegram:', e)
	} else {
		console.error('–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞', e)
	}
})

bot.start()
